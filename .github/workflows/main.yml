name: PHP Composer and Webpack deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-dev

      # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
      # Docs: https://getcomposer.org/doc/articles/scripts.md

      # - name: Run test suite
      #   run: composer run-script test
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.4.0
        with:
          # Set always-auth in npmrc
          #always-auth: # optional, default is false
          # Version Spec of the version to use.  Examples: 12.x, 10.15.1, >=10.15.0
          node-version: 12.20.x
          # Target architecture for Node to use. Examples: x86, x64. Will use system architecture by default.
          #architecture: # optional
          # Set this option if you want the action to check for the latest available version that satisfies the version spec
          #check-latest: # optional
          # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN
          #registry-url: # optional
          # Optional scope for authenticating against scoped registries
          #scope: # optional
          # Used to pull node distributions from node-versions.  Since there's a default, this is typically not supplied by the user.
          #token: # optional, default is ${{ github.token }}
          # Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm
          #cache: # optional
          # Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. Supports wildcards or a list of file names for caching multiple dependencies.
          cache-dependency-path: yarn.lock
      - name: Install front Dependencies
        run: yarn install

      - name: Use webpack
        run: npx webpack --config webpack.config.js

      - name: FTP-Deploy-Action
        uses: SamKirkland/FTP-Deploy-Action@4.1.0
        with:
          server: vhosts/sims.gpsnet.fr
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./
          server-dir: ${{ secrets.FTP_DEPLOY_DIR }}
          protocol: sftp
          port: 22
