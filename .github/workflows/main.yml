name: PHP Composer and Webpack deploy

on:
  pull_request:
    branches: [ main ]

jobs:
  build:
    environment:
      name: Prod Gandi
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-dev

      - name: Generate .env file
        shell: bash
        run: |
          echo $APP_ENV > .env.prod
          echo $APP_SECRET >> .env.prod
          echo $DB_TABLE >> .env.prod
          echo $DB_HOST >> .env.prod
          echo $DB_PORT >> .env.prod
          echo $DB_USER >> .env.prod
          echo $DB_PASSWORD >> .env.prod
          echo $DB_DRIVER >> .env.prod
          echo $DB_VERSION >> .env.prod
          cat .env.prod
        env:
          APP_ENV: ${{ secrets.APP_ENV }}
          APP_SECRET: ${{ secrets.APP_SECRET }}
          DB_TABLE: ${{ secrets.DB_TABLE }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT}}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_DRIVER: ${{ secrets.DB_DRIVER }}
          DB_VERSION: ${{ secrets.DB_VERSION }}

      - name: Export .env vars
        run: composer dump-env prod

      # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
      # Docs: https://getcomposer.org/doc/articles/scripts.md

      - name: Generate typescript client
        uses: openapi-generators/openapitools-generator-action@v1
        with:
          generator: typescript
          openapi-file: config/simrandom.api.json
          config-file: config/openapi/config.json
          generator-tag: latest-release

      - shell: bash
        run: |
          mv typescript-client assets/gen

      # - name: Run test suite
      #   run: composer run-script test
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.4.0
        with:
          # Set always-auth in npmrc
          #always-auth: # optional, default is false
          # Version Spec of the version to use.  Examples: 12.x, 10.15.1, >=10.15.0
          node-version: 16.15.x
          # Target architecture for Node to use. Examples: x86, x64. Will use system architecture by default.
          #architecture: # optional
          # Set this option if you want the action to check for the latest available version that satisfies the version spec
          #check-latest: # optional
          # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN
          #registry-url: # optional
          # Optional scope for authenticating against scoped registries
          #scope: # optional
          # Used to pull node distributions from node-versions.  Since there's a default, this is typically not supplied by the user.
          #token: # optional, default is ${{ github.token }}
          # Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm
          #cache: # optional
          # Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. Supports wildcards or a list of file names for caching multiple dependencies.
          cache-dependency-path: yarn.lock
      - name: Install front Dependencies
        run: yarn install

      - name: Use webpack
        run: npx webpack --config webpack.config.js --env production

      - shell: bash
        run: |
          rm -Rf var/cache/dev .git .github .gitignore node_modules tests assets .editorconfig .babelrc package.json README.md symfony.lock tsconfig.json webpack.config.js yarn.lock .env .env.prod phpunit.xml.dist docker-compose.yml docker-compose.override.yml

      - name: create archive
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          filename: 'simrandom.zip'

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: simrandom
          path: ./simrandom.zip

      - name: Display artifacts
        uses: actions/download-artifact@v2
        with:
          name: simrandom