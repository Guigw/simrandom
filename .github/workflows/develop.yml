name: PHP Composer and Tests

on:
  push:
    branches: [ develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Generate .env file
        shell: bash
        run: |
          echo DATABASE_TABLE="test_yrial" > .env.test
          echo DATABASE_DRIVER="pdo_sqlite" >> .env.test
          echo DATABASE_PATH="%kernel.cache_dir%/test.db" >> .env.test
          cat .env.test

      - name: Init Test Env
        run: composer dump-env test

      - name: Init Test DB
        run: php bin/console --env=test d:d:c

      - name: Init Schema
        run: php bin/console --env=test d:s:c

      - name: PHPUnit Tests
        uses: php-actions/phpunit@v3
        with:
          bootstrap: vendor/autoload.php
          configuration: phpunit.xml.dist
          php_version: 8.1.4
          php_extensions: xdebug
        env:
          XDEBUG_MODE: coverage

      - name: Generate typescript client
        uses: openapi-generators/openapitools-generator-action@v1
        with:
          generator: typescript
          openapi-file: config/simrandom.api.json
          config-file: config/openapi/config.json
          generator-tag: latest-release

      - shell: bash
        run: |
          mv typescript-client assets/gen

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.4.0
        with:
          # Set always-auth in npmrc
          #always-auth: # optional, default is false
          # Version Spec of the version to use.  Examples: 12.x, 10.15.1, >=10.15.0
          node-version: 16.15.x
          # Target architecture for Node to use. Examples: x86, x64. Will use system architecture by default.
          #architecture: # optional
          # Set this option if you want the action to check for the latest available version that satisfies the version spec
          #check-latest: # optional
          # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN
          #registry-url: # optional
          # Optional scope for authenticating against scoped registries
          #scope: # optional
          # Used to pull node distributions from node-versions.  Since there's a default, this is typically not supplied by the user.
          #token: # optional, default is ${{ github.token }}
          # Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm
          #cache: # optional
          # Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. Supports wildcards or a list of file names for caching multiple dependencies.
          cache-dependency-path: yarn.lock

      - name: Install front Dependencies
        run: yarn install

      - name: Test Front App
        run: yarn test --coverage